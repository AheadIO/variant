// MPark.Variant
//
// Copyright Michael Park, 2015-2017
//
// Distributed under the Boost Software License, Version 1.0.
// (See accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)

#define BOOST_MPL_CFG_NO_PREPROCESSED_HEADERS
#define BOOST_MPL_LIMIT_LIST_SIZE 50
#include <boost/variant.hpp>
#undef BOOST_MPL_CFG_NO_PREPROCESSED_HEADERS
#undef BOOST_MPL_LIMIT_LIST_SIZE

template <int>
struct S {};

int main() {
<%=
  (0...env[:repeat]).map { |i|
    alts = (0...n).map { |alt| "S<#{alt + i}>" }.join(", ")
    "  boost::variant<#{alts}> v#{i}(S<#{i}>{});"
  }.join("\n")
%>
#if defined(METABENCH)
<%=
  (0...env[:repeat]).map { |i|
    "  boost::apply_visitor([](auto) {}, v#{i});"
  }.join("\n")
%>
#endif
}
