language: cpp
os: linux
sudo: false

branches:
  only:
    - benchmark

git:
  depth: 1

env:
  global:
    - secure: jL8hAVoa2B512uGeoh5DL2YXrAznfKPz3GbcaUPzR6mR2Izj2yHFihLLeHrEY8vUdadS8zbn2CwtWnmJjNz5kIT/RxESxJJtgVNruwo0u4piIfxVI/tTRObMXKaGrfquDAHS/hjAhQlPSNNr+89oFSBvSfNpAVECd/ERhhnjIugD+MFFzaxi26qvM6li9toxPNJIxBq9jHRuZzlpWez6d6RcTsaqr30BaCEuJhVcg7J4SiSL8xeW2sokAG65pZ/aig23cCSJkhazbMd7Cy/OFNjQrhc2PQ+E0c2xEwdwCNA8qTnsMrUeo9NXc+lozOf23LWD1EvZtcNNG5arPhSuGGYs90T1GdL2jqyS1E+1Xf0cOWqB4VMho7H+vV55SgZb+TYDrmB63YvgxcUKgsDRvPI9bBv3S3uxgktbE6gwnrfQirKowbscC07X3R1RJiI6hSkVNdrLnQF28BHMRlCpyhDejIWm4qHgOrWCN+I6hZtk+nsRuJF8sCSFPUWuzlG+/kSwaBwm/eEy+ZI66ufJamHUqC8bxa+6kINxtJTMN79ZnbIPwOvey9cfVfzwxefaStwpQbCJuZlMbuo4738HxUQpscxgv6LA5ZEMz8hlKO82cWDZSEDxSrUowueu1Az0u5tfzBUXaU5pZCnGdK6aMGHcTznaeUFebq8uhLR3uc0=

matrix:
  include:
    # ubuntu 14.04, gcc-5, ctor.fwd
    - env: VER=5 LIBS="anthonyw;boost;eggs;juice;mapbox;mpark;pdimov" BENCHMARK="ctor.fwd"
      compiler: gcc
      dist: trusty
      addons: &gcc5 { apt: { packages: ["g++-5"], sources: ["ubuntu-toolchain-r-test"] } }
    # ubuntu 14.04, gcc-5, visit.1
    - env: VER=5 LIBS="anthonyw;boost;eggs;juice;mapbox;mpark;pdimov" BENCHMARK="visit.1"
      compiler: gcc
      dist: trusty
      addons: *gcc5
    # ubuntu 14.04, gcc-5, visit.2.equal
    - env: VER=5 LIBS="anthonyw;boost;eggs;juice;mapbox;mpark;pdimov" BENCHMARK="visit.2.equal"
      compiler: gcc
      dist: trusty
      addons: *gcc5
    # ubuntu 14.04, gcc-5, visit.2.mixed
    - env: VER=5 LIBS="anthonyw;boost;eggs;juice;mapbox;mpark;pdimov" BENCHMARK="visit.2.mixed"
      compiler: gcc
      dist: trusty
      addons: *gcc5

    # ubuntu 14.04, gcc-6, ctor.fwd
    - env: VER=6 LIBS="anthonyw;boost;eggs;juice;mapbox;mpark;pdimov" BENCHMARK="ctor.fwd"
      compiler: gcc
      dist: trusty
      addons: &gcc6 { apt: { packages: ["g++-6"], sources: ["ubuntu-toolchain-r-test"] } }
    # ubuntu 14.04, gcc-6, visit.1
    - env: VER=6 LIBS="anthonyw;boost;eggs;juice;mapbox;mpark;pdimov" BENCHMARK="visit.1"
      compiler: gcc
      dist: trusty
      addons: *gcc6
    # ubuntu 14.04, gcc-6, visit.2.equal
    - env: VER=6 LIBS="anthonyw;boost;eggs;juice;mapbox;mpark;pdimov" BENCHMARK="visit.2.equal"
      compiler: gcc
      dist: trusty
      addons: *gcc6
    # ubuntu 14.04, gcc-6, visit.2.mixed
    - env: VER=6 LIBS="anthonyw;boost;eggs;juice;mapbox;mpark;pdimov" BENCHMARK="visit.2.mixed"
      compiler: gcc
      dist: trusty
      addons: *gcc6

    # ubuntu 14.04, gcc-7, ctor.fwd
    - env: VER=7 LIBS="anthonyw;boost;eggs;juice;mapbox;mpark;pdimov;std" BENCHMARK="ctor.fwd"
      compiler: gcc
      dist: trusty
      addons: &gcc7 { apt: { packages: ["g++-7"], sources: ["ubuntu-toolchain-r-test"] } }
    # ubuntu 14.04, gcc-7, visit.1
    - env: VER=7 LIBS="anthonyw;boost;eggs;juice;mapbox;mpark;pdimov;std" BENCHMARK="visit.1"
      compiler: gcc
      dist: trusty
      addons: *gcc7
    # ubuntu 14.04, gcc-7, visit.2.equal
    - env: VER=7 LIBS="anthonyw;boost;eggs;juice;mapbox;mpark;pdimov;std" BENCHMARK="visit.2.equal"
      compiler: gcc
      dist: trusty
      addons: *gcc7
    # ubuntu 14.04, gcc-7, visit.2.mixed
    - env: VER=7 LIBS="anthonyw;boost;eggs;juice;mapbox;mpark;pdimov;std" BENCHMARK="visit.2.mixed"
      compiler: gcc
      dist: trusty
      addons: *gcc7

    # ubuntu 14.04, clang-3.6, ctor.fwd
    - env: VER=3.6 LIBS="anthonyw;boost;eggs;mapbox;mpark;pdimov" BENCHMARK="ctor.fwd"
      compiler: clang
      dist: precise
      addons: &clang36 { apt: { packages: ["clang-3.6"], sources: ["ubuntu-toolchain-r-test", "llvm-toolchain-precise-3.6"] } }
    # ubuntu 14.04, clang-3.6, visit.1
    - env: VER=3.6 LIBS="anthonyw;boost;eggs;mapbox;mpark;pdimov" BENCHMARK="visit.1"
      compiler: clang
      dist: precise
      addons: *clang36
    # ubuntu 14.04, clang-3.6, visit.2.equal
    - env: VER=3.6 LIBS="anthonyw;boost;eggs;mapbox;mpark;pdimov" BENCHMARK="visit.2.equal"
      compiler: clang
      dist: precise
      addons: *clang36
    # ubuntu 14.04, clang-3.6, visit.2.mixed
    - env: VER=3.6 LIBS="anthonyw;boost;eggs;mapbox;mpark;pdimov" BENCHMARK="visit.2.mixed"
      compiler: clang
      dist: precise
      addons: *clang36

    # ubuntu 14.04, clang-3.7, ctor.fwd
    - env: VER=3.7 LIBS="anthonyw;boost;eggs;mapbox;mpark;pdimov" BENCHMARK="ctor.fwd"
      compiler: clang
      dist: precise
      addons: &clang37 { apt: { packages: ["clang-3.7"], sources: ["ubuntu-toolchain-r-test", "llvm-toolchain-precise-3.7"] } }
    # ubuntu 14.04, clang-3.7, visit.1
    - env: VER=3.7 LIBS="anthonyw;boost;eggs;mapbox;mpark;pdimov" BENCHMARK="visit.1"
      compiler: clang
      dist: precise
      addons: *clang37
    # ubuntu 14.04, clang-3.7, visit.2.equal
    - env: VER=3.7 LIBS="anthonyw;boost;eggs;mapbox;mpark;pdimov" BENCHMARK="visit.2.equal"
      compiler: clang
      dist: precise
      addons: *clang37
    # ubuntu 14.04, clang-3.7, visit.2.mixed
    - env: VER=3.7 LIBS="anthonyw;boost;eggs;mapbox;mpark;pdimov" BENCHMARK="visit.2.mixed"
      compiler: clang
      dist: precise
      addons: *clang37

    # ubuntu 14.04, clang-3.8, ctor.fwd
    - env: VER=3.8 LIBS="anthonyw;boost;eggs;juice;mapbox;mpark;pdimov" BENCHMARK="ctor.fwd"
      compiler: clang
      dist: precise
      addons: &clang38 { apt: { packages: ["clang-3.8"], sources: ["ubuntu-toolchain-r-test", "llvm-toolchain-precise-3.8"] } }
    # ubuntu 14.04, clang-3.8, visit.1
    - env: VER=3.8 LIBS="anthonyw;boost;eggs;juice;mapbox;mpark;pdimov" BENCHMARK="visit.1"
      compiler: clang
      dist: precise
      addons: *clang38
    # ubuntu 14.04, clang-3.8, visit.2.equal
    - env: VER=3.8 LIBS="anthonyw;boost;eggs;juice;mapbox;mpark;pdimov" BENCHMARK="visit.2.equal"
      compiler: clang
      dist: precise
      addons: *clang38
    # ubuntu 14.04, clang-3.8, visit.2.mixed
    - env: VER=3.8 LIBS="anthonyw;boost;eggs;juice;mapbox;mpark;pdimov" BENCHMARK="visit.2.mixed"
      compiler: clang
      dist: precise
      addons: *clang38

    # ubuntu 14.04, clang-3.9, ctor.fwd
    - env: VER=3.9 LIBS="anthonyw;boost;eggs;juice;mapbox;mpark;pdimov" BENCHMARK="ctor.fwd"
      compiler: clang
      dist: trusty
      addons: &clang39 { apt: { packages: ["clang-3.9"], sources: ["ubuntu-toolchain-r-test", "llvm-toolchain-trusty-3.9"] } }
    # ubuntu 14.04, clang-3.9, visit.1
    - env: VER=3.9 LIBS="anthonyw;boost;eggs;juice;mapbox;mpark;pdimov" BENCHMARK="visit.1"
      compiler: clang
      dist: trusty
      addons: *clang39
    # ubuntu 14.04, clang-3.9, visit.2.equal
    - env: VER=3.9 LIBS="anthonyw;boost;eggs;juice;mapbox;mpark;pdimov" BENCHMARK="visit.2.equal"
      compiler: clang
      dist: trusty
      addons: *clang39
    # ubuntu 14.04, clang-3.9, visit.2.mixed
    - env: VER=3.9 LIBS="anthonyw;boost;eggs;juice;mapbox;mpark;pdimov" BENCHMARK="visit.2.mixed"
      compiler: clang
      dist: trusty
      addons: *clang39

    # ubuntu 14.04, clang-4.0, ctor.fwd
    - env: VER=4.0 LIBS="anthonyw;boost;eggs;juice;mapbox;mpark;pdimov;std" BENCHMARK="ctor.fwd"
      compiler: clang
      dist: trusty
      addons: &clang40 { apt: { packages: ["clang-4.0"], sources: ["ubuntu-toolchain-r-test", "llvm-toolchain-trusty-4.0"] } }
    # ubuntu 14.04, clang-4.0, visit.1
    - env: VER=4.0 LIBS="anthonyw;boost;eggs;juice;mapbox;mpark;pdimov;std" BENCHMARK="visit.1"
      compiler: clang
      dist: trusty
      addons: *clang40
    # ubuntu 14.04, clang-4.0, visit.2.equal
    - env: VER=4.0 LIBS="anthonyw;boost;eggs;juice;mapbox;mpark;pdimov;std" BENCHMARK="visit.2.equal"
      compiler: clang
      dist: trusty
      addons: *clang40
    # ubuntu 14.04, clang-4.0, visit.2.mixed
    - env: VER=4.0 LIBS="anthonyw;boost;eggs;juice;mapbox;mpark;pdimov;std" BENCHMARK="visit.2.mixed"
      compiler: clang
      dist: trusty
      addons: *clang40

before_install:
  # Save the name of the compiler.
  - COMPILER=${CC}
  # Set the correct `CC` and `CXX` environment variables.
  - |
    if [ -n "${VER}" ]; then
      export CC="${CC}-${VER}"
      export CXX="${CXX}-${VER}"
    fi
  - ${CXX} --version
  # Directory for dependency installation.
  - DEPS="${TRAVIS_BUILD_DIR}/deps"
  - mkdir -p ${DEPS}
  # Install newer cmake.
  - |
    if [ "${TRAVIS_OS_NAME}" = "osx" ]; then
      brew update
      brew uninstall cmake
      brew install cmake
    elif [ "${TRAVIS_OS_NAME}" = "linux" ]; then
      travis_retry wget --no-check-certificate https://cmake.org/files/v3.7/cmake-3.7.2-Linux-x86_64.sh
      bash cmake-3.7.2-Linux-x86_64.sh --skip-license --prefix="${DEPS}"
      export PATH="${DEPS}/bin:${PATH}"
    fi
  - cmake --version
  # Install newer ruby
  - rvm use 2.1 --install --binary --fuzzy
  - ruby --version
  # Install specific version of libc++.
  - |
    if [ "${TRAVIS_OS_NAME}" = "linux" ] && [ "${COMPILER}" = "clang" ] && [ -n "${VER}" ]; then
      LLVM_VER=$(echo "$(${CXX} --version)" | grep -Po "clang version \K([0-9]\.[0-9]\.[0-9])")

      LLVM_URL="http://llvm.org/releases/${LLVM_VER}/llvm-${LLVM_VER}.src.tar.xz"
      LIBCXX_URL="http://llvm.org/releases/${LLVM_VER}/libcxx-${LLVM_VER}.src.tar.xz"
      LIBCXXABI_URL="http://llvm.org/releases/${LLVM_VER}/libcxxabi-${LLVM_VER}.src.tar.xz"

      mkdir -p llvm-build llvm llvm/projects/libcxx llvm/projects/libcxxabi

      travis_retry wget -O - ${LLVM_URL} | tar --strip-components=1 -xJ -C llvm
      travis_retry wget -O - ${LIBCXX_URL} | tar --strip-components=1 -xJ -C llvm/projects/libcxx
      travis_retry wget -O - ${LIBCXXABI_URL} | tar --strip-components=1 -xJ -C llvm/projects/libcxxabi

      pushd llvm-build
      cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=${DEPS} ../llvm
      cmake --build projects/libcxx --target install -- -j 2
      cmake --build projects/libcxxabi --target install -- -j 2
      popd

      export CXXFLAGS="${CXXFLAGS} -nostdinc++ -isystem ${DEPS}/include/c++/v1"
      export LDFLAGS="${LDFLAGS} -L${DEPS}/lib -lc++ -lc++abi"
      export LD_LIBRARY_PATH="${DEPS}/lib:${LD_LIBRARY_PATH}"
    fi
  # Install newer boost.
  - |
    if [ "${TRAVIS_OS_NAME}" = "osx" ]; then
      brew update
      brew uninstall boost
      brew install boost
    elif [ "${TRAVIS_OS_NAME}" = "linux" ]; then
      mkdir -p ${DEPS}/include

      BOOST_URL="https://dl.bintray.com/boostorg/release/1.65.0/source/boost_1_65_0.tar.gz"
      travis_retry wget -O - ${BOOST_URL} | tar --strip-components=1 -xz -C ${DEPS}/include boost_1_65_0/boost
      export CXXFLAGS="${CXXFLAGS} -isystem ${DEPS}/include"
    fi

install:
  - mkdir build
  - pushd build
  - cmake -DCMAKE_BUILD_TYPE="Release" -DMPARK_VARIANT_INCLUDE_LIBRARIES="${LIBS}" ..
  - TARGETS=($(cmake --build . --target help | grep -E "benchmark\.[[:alnum:]_]+\.${BENCHMARK}" | cut -d " " -f 2 | sort))
  - |
    for TARGET in ${TARGETS[@]}; do
      cmake --build . --target ${TARGET}
    done
  - popd

before_script:
  - git config --global user.name "Travis CI"
  - git config --global user.email "<>"
  - git clone https://$GITHUB_TOKEN@github.com/mpark/variant --depth 1 --branch=gh-pages gh-pages &>/dev/null
  - |
    for TARGET in ${TARGETS[@]}; do
      category="$(echo ${TARGET} | cut -d '.' -f 2)"
      name="$(echo ${TARGET} | cut -d '.' -f 3-)"
      src="build/${name}"
      out="gh-pages/_${category}/${CC}/${name}"

      rm -rf ${out}
      mkdir -p ${out}

      # Add a YAML front matter to every chart and every JSON file (for Jekyll).
      {
        echo "---"
        echo "compiler: ${CC}"
        echo "timestamp: $(date '+%a, %-d %b %Y')"
        echo "---"
        cat ${src}/${category}.html
      } > ${out}/index.html

      for dataset in ${src}/*.json; do
        {
          echo "---"
          echo "---"
          cat ${dataset}
        } > ${out}/$(basename ${dataset})
      done
    done

script:
  - pushd gh-pages
  - git add --all .
  - git commit -m "Update benchmark '${BENCHMARK}' for '${CC}'."
  - travis_retry git pull --rebase && git push origin gh-pages &>/dev/null
  - popd

notifications:
  email: false
