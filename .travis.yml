language: cpp
sudo: false

branches:
  only:
    - master

git:
  depth: 1

matrix:
  include:
    # ubuntu 14.04, gcc-4.9, c++11, debug, exceptions
    - env: VER=4.9 STD=11 BUILD=Debug EX=ON TESTS="mpark"
      compiler: gcc
      os: linux
      dist: trusty
      addons: &gcc49 { apt: { packages: ["g++-4.9"], sources: ["ubuntu-toolchain-r-test"] } }
    # ubuntu 14.04, gcc-4.9, c++11, debug, no exceptions
    - env: VER=4.9 STD=11 BUILD=Debug EX=OFF TESTS="mpark"
      compiler: gcc
      os: linux
      dist: trusty
      addons: *gcc49
    # ubuntu 14.04, gcc-4.9, c++11, release, exceptions
    - env: VER=4.9 STD=11 BUILD=Release EX=ON TESTS="mpark"
      compiler: gcc
      os: linux
      dist: trusty
      addons: *gcc49
    # ubuntu 14.04, gcc-4.9, c++11, release, no-exceptions
    - env: VER=4.9 STD=11 BUILD=Release EX=OFF TESTS="mpark"
      compiler: gcc
      os: linux
      dist: trusty
      addons: *gcc49
    # ubuntu 14.04, gcc-4.9, c++14, debug, exceptions
    - env: VER=4.9 STD=14 BUILD=Debug EX=ON TESTS="mpark"
      compiler: gcc
      os: linux
      dist: trusty
      addons: *gcc49
    # ubuntu 14.04, gcc-4.9, c++14, debug, no-exceptions
    - env: VER=4.9 STD=14 BUILD=Debug EX=OFF TESTS="mpark"
      compiler: gcc
      os: linux
      dist: trusty
      addons: *gcc49
    # ubuntu 14.04, gcc-4.9, c++14, release, exceptions
    - env: VER=4.9 STD=14 BUILD=Release EX=ON TESTS="mpark"
      compiler: gcc
      os: linux
      dist: trusty
      addons: *gcc49
    # ubuntu 14.04, gcc-4.9, c++14, release, no-exceptions
    - env: VER=4.9 STD=14 BUILD=Release EX=OFF TESTS="mpark"
      compiler: gcc
      os: linux
      dist: trusty
      addons: *gcc49

    # ubuntu 14.04, gcc-5, c++11, debug, exceptions
    - env: VER=5 STD=11 BUILD=Debug EX=ON TESTS="mpark;libc++"
      compiler: gcc
      os: linux
      dist: trusty
      addons: &gcc5 { apt: { packages: ["g++-5"], sources: ["ubuntu-toolchain-r-test"] } }
    # ubuntu 14.04, gcc-5, c++11, debug, no exceptions
    - env: VER=5 STD=11 BUILD=Debug EX=OFF TESTS="mpark;libc++"
      compiler: gcc
      os: linux
      dist: trusty
      addons: *gcc5
    # ubuntu 14.04, gcc-5, c++11, release, exceptions
    - env: VER=5 STD=11 BUILD=Release EX=ON TESTS="mpark;libc++"
      compiler: gcc
      os: linux
      dist: trusty
      addons: *gcc5
    # ubuntu 14.04, gcc-5, c++11, release, no-exceptions
    - env: VER=5 STD=11 BUILD=Release EX=OFF TESTS="mpark;libc++"
      compiler: gcc
      os: linux
      dist: trusty
      addons: *gcc5
    # ubuntu 14.04, gcc-5, c++14, debug, exceptions
    - env: VER=5 STD=14 BUILD=Debug EX=ON TESTS="mpark;libc++"
      compiler: gcc
      os: linux
      dist: trusty
      addons: *gcc5
    # ubuntu 14.04, gcc-5, c++14, debug, no-exceptions
    - env: VER=5 STD=14 BUILD=Debug EX=OFF TESTS="mpark;libc++"
      compiler: gcc
      os: linux
      dist: trusty
      addons: *gcc5
    # ubuntu 14.04, gcc-5, c++14, release, exceptions
    - env: VER=5 STD=14 BUILD=Release EX=ON TESTS="mpark;libc++"
      compiler: gcc
      os: linux
      dist: trusty
      addons: *gcc5
    # ubuntu 14.04, gcc-5, c++14, release, no-exceptions
    - env: VER=5 STD=14 BUILD=Release EX=OFF TESTS="mpark;libc++"
      compiler: gcc
      os: linux
      dist: trusty
      addons: *gcc5

    # ubuntu 14.04, gcc-6, c++11, debug, exceptions
    - env: VER=6 STD=11 BUILD=Debug EX=ON TESTS="mpark;libc++"
      compiler: gcc
      os: linux
      dist: trusty
      addons: &gcc6 { apt: { packages: ["g++-6"], sources: ["ubuntu-toolchain-r-test"] } }
    # ubuntu 14.04, gcc-6, c++11 debug, no-exceptions
    - env: VER=6 STD=11 BUILD=Debug EX=OFF TESTS="mpark;libc++"
      compiler: gcc
      os: linux
      dist: trusty
      addons: *gcc6
    # ubuntu 14.04, gcc-6, c++11, release, exceptions
    - env: VER=6 STD=11 BUILD=Release EX=ON TESTS="mpark;libc++"
      compiler: gcc
      os: linux
      dist: trusty
      addons: *gcc6
    # ubuntu 14.04, gcc-6, c++11, release, no-exceptions
    - env: VER=6 STD=11 BUILD=Release EX=OFF TESTS="mpark;libc++"
      compiler: gcc
      os: linux
      dist: trusty
      addons: *gcc6
    # ubuntu 14.04, gcc-6, c++14, debug, exceptions
    - env: VER=6 STD=14 BUILD=Debug EX=ON TESTS="mpark;libc++"
      compiler: gcc
      os: linux
      dist: trusty
      addons: *gcc6
    # ubuntu 14.04, gcc-6, c++14, debug, no-exceptions
    - env: VER=6 STD=14 BUILD=Debug EX=OFF TESTS="mpark;libc++"
      compiler: gcc
      os: linux
      dist: trusty
      addons: *gcc6
    # ubuntu 14.04, gcc-6, c++14, release, exceptions
    - env: VER=6 STD=14 BUILD=Release EX=ON TESTS="mpark;libc++"
      compiler: gcc
      os: linux
      dist: trusty
      addons: *gcc6
    # ubuntu 14.04, gcc-6, c++14, release, no-exceptions
    - env: VER=6 STD=14 BUILD=Release EX=OFF TESTS="mpark;libc++"
      compiler: gcc
      os: linux
      dist: trusty
      addons: *gcc6

    # ubuntu 14.04, gcc-7, c++11, debug, exceptions
    - env: VER=7 STD=11 BUILD=Debug EX=ON TESTS="mpark;libc++"
      compiler: gcc
      os: linux
      dist: trusty
      addons: &gcc7 { apt: { packages: ["g++-7"], sources: ["ubuntu-toolchain-r-test"] } }
    # ubuntu 14.04, gcc-7, c++11 debug, no-exceptions
    - env: VER=7 STD=11 BUILD=Debug EX=OFF TESTS="mpark;libc++"
      compiler: gcc
      os: linux
      dist: trusty
      addons: *gcc7
    # ubuntu 14.04, gcc-7, c++11, release, exceptions
    - env: VER=7 STD=11 BUILD=Release EX=ON TESTS="mpark;libc++"
      compiler: gcc
      os: linux
      dist: trusty
      addons: *gcc7
    # ubuntu 14.04, gcc-7, c++11, release, no-exceptions
    - env: VER=7 STD=11 BUILD=Release EX=OFF TESTS="mpark;libc++"
      compiler: gcc
      os: linux
      dist: trusty
      addons: *gcc7
    # ubuntu 14.04, gcc-7, c++14, debug, exceptions
    - env: VER=7 STD=14 BUILD=Debug EX=ON TESTS="mpark;libc++"
      compiler: gcc
      os: linux
      dist: trusty
      addons: *gcc7
    # ubuntu 14.04, gcc-7, c++14, debug, no-exceptions
    - env: VER=7 STD=14 BUILD=Debug EX=OFF TESTS="mpark;libc++"
      compiler: gcc
      os: linux
      dist: trusty
      addons: *gcc7
    # ubuntu 14.04, gcc-7, c++14, release, exceptions
    - env: VER=7 STD=14 BUILD=Release EX=ON TESTS="mpark;libc++"
      compiler: gcc
      os: linux
      dist: trusty
      addons: *gcc7
    # ubuntu 14.04, gcc-7, c++14, release, no-exceptions
    - env: VER=7 STD=14 BUILD=Release EX=OFF TESTS="mpark;libc++"
      compiler: gcc
      os: linux
      dist: trusty
      addons: *gcc7

    # ubuntu 14.04, clang-3.5, c++11, debug, exceptions
    - env: VER=3.5 STD=11 BUILD=Debug EX=ON TESTS="mpark;libc++"
      compiler: clang
      os: linux
      dist: precise
      addons: &clang35 { apt: { packages: ["clang-3.5"], sources: ["ubuntu-toolchain-r-test", "llvm-toolchain-precise-3.5"] } }
    # ubuntu 14.04, clang-3.5, c++11, debug, no-exceptions
    - env: VER=3.5 STD=11 BUILD=Debug EX=OFF TESTS="mpark;libc++"
      compiler: clang
      os: linux
      dist: precise
      addons: *clang35
    # ubuntu 14.04, clang-3.5, c++11, release, exceptions
    - env: VER=3.5 STD=11 BUILD=Release EX=ON TESTS="mpark;libc++"
      compiler: clang
      os: linux
      dist: precise
      addons: *clang35
    # ubuntu 14.04, clang-3.5, c++11, release, no-exceptions
    - env: VER=3.5 STD=11 BUILD=Release EX=OFF TESTS="mpark;libc++"
      compiler: clang
      os: linux
      dist: precise
      addons: *clang35
    # ubuntu 14.04, clang-3.5, c++14, debug, exceptions
    - env: VER=3.5 STD=14 BUILD=Debug EX=ON TESTS="mpark;libc++"
      compiler: clang
      os: linux
      dist: precise
      addons: *clang35
    # ubuntu 14.04, clang-3.5, c++14, debug, no-exceptions
    - env: VER=3.5 STD=14 BUILD=Debug EX=OFF TESTS="mpark;libc++"
      compiler: clang
      os: linux
      dist: precise
      addons: *clang35
    # ubuntu 14.04, clang-3.5, c++14, release, exceptions
    - env: VER=3.5 STD=14 BUILD=Release EX=ON TESTS="mpark;libc++"
      compiler: clang
      os: linux
      dist: precise
      addons: *clang35
    # ubuntu 14.04, clang-3.5, c++14, release, no-exceptions
    - env: VER=3.5 STD=14 BUILD=Release EX=OFF TESTS="mpark;libc++"
      compiler: clang
      os: linux
      dist: precise
      addons: *clang35

    # ubuntu 14.04, clang-3.6, c++11, debug, exceptions
    - env: VER=3.6 STD=11 BUILD=Debug EX=ON TESTS="mpark;libc++"
      compiler: clang
      os: linux
      dist: precise
      addons: &clang36 { apt: { packages: ["clang-3.6"], sources: ["ubuntu-toolchain-r-test", "llvm-toolchain-precise-3.6"] } }
    # ubuntu 14.04, clang-3.6, c++11, debug, no-exceptions
    - env: VER=3.6 STD=11 BUILD=Debug EX=OFF TESTS="mpark;libc++"
      compiler: clang
      os: linux
      dist: precise
      addons: *clang36
    # ubuntu 14.04, clang-3.6, c++11, release, exceptions
    - env: VER=3.6 STD=11 BUILD=Release EX=ON TESTS="mpark;libc++"
      compiler: clang
      os: linux
      dist: precise
      addons: *clang36
    # ubuntu 14.04, clang-3.6, c++11, release, no-exceptions
    - env: VER=3.6 STD=11 BUILD=Release EX=OFF TESTS="mpark;libc++"
      compiler: clang
      os: linux
      dist: precise
      addons: *clang36
    # ubuntu 14.04, clang-3.6, c++14, debug, exceptions
    - env: VER=3.6 STD=14 BUILD=Debug EX=ON TESTS="mpark;libc++"
      compiler: clang
      os: linux
      dist: precise
      addons: *clang36
    # ubuntu 14.04, clang-3.6, c++14, debug, no-exceptions
    - env: VER=3.6 STD=14 BUILD=Debug EX=OFF TESTS="mpark;libc++"
      compiler: clang
      os: linux
      dist: precise
      addons: *clang36
    # ubuntu 14.04, clang-3.6, c++14, release, exceptions
    - env: VER=3.6 STD=14 BUILD=Release EX=ON TESTS="mpark;libc++"
      compiler: clang
      os: linux
      dist: precise
      addons: *clang36
    # ubuntu 14.04, clang-3.6, c++14, release, no-exceptions
    - env: VER=3.6 STD=14 BUILD=Release EX=OFF TESTS="mpark;libc++"
      compiler: clang
      os: linux
      dist: precise
      addons: *clang36

    # ubuntu 14.04, clang-3.7, c++11, debug, exceptions
    - env: VER=3.7 STD=11 BUILD=Debug EX=ON TESTS="mpark;libc++"
      compiler: clang
      os: linux
      dist: precise
      addons: &clang37 { apt: { packages: ["clang-3.7"], sources: ["ubuntu-toolchain-r-test", "llvm-toolchain-precise-3.7"] } }
    # ubuntu 14.04, clang-3.7, c++11, debug, no-exceptions
    - env: VER=3.7 STD=11 BUILD=Debug EX=OFF TESTS="mpark;libc++"
      compiler: clang
      os: linux
      dist: precise
      addons: *clang37
    # ubuntu 14.04, clang-3.7, c++11, release, exceptions
    - env: VER=3.7 STD=11 BUILD=Release EX=ON TESTS="mpark;libc++"
      compiler: clang
      os: linux
      dist: precise
      addons: *clang37
    # ubuntu 14.04, clang-3.7, c++11, release, no-exceptions
    - env: VER=3.7 STD=11 BUILD=Release EX=OFF TESTS="mpark;libc++"
      compiler: clang
      os: linux
      dist: precise
      addons: *clang37
    # ubuntu 14.04, clang-3.7, c++14, debug, exceptions
    - env: VER=3.7 STD=14 BUILD=Debug EX=ON TESTS="mpark;libc++"
      compiler: clang
      os: linux
      dist: precise
      addons: *clang37
    # ubuntu 14.04, clang-3.7, c++14, debug, no-exceptions
    - env: VER=3.7 STD=14 BUILD=Debug EX=OFF TESTS="mpark;libc++"
      compiler: clang
      os: linux
      dist: precise
      addons: *clang37
    # ubuntu 14.04, clang-3.7, c++14, release, exceptions
    - env: VER=3.7 STD=14 BUILD=Release EX=ON TESTS="mpark;libc++"
      compiler: clang
      os: linux
      dist: precise
      addons: *clang37
    # ubuntu 14.04, clang-3.7, c++14, release, no-exceptions
    - env: VER=3.7 STD=14 BUILD=Release EX=OFF TESTS="mpark;libc++"
      compiler: clang
      os: linux
      dist: precise
      addons: *clang37

    # ubuntu 14.04, clang-3.8, c++11, debug, exceptions
    - env: VER=3.8 STD=11 BUILD=Debug EX=ON TESTS="mpark;libc++"
      compiler: clang
      os: linux
      dist: precise
      addons: &clang38 { apt: { packages: ["clang-3.8"], sources: ["ubuntu-toolchain-r-test", "llvm-toolchain-precise-3.8"] } }
    # ubuntu 14.04, clang-3.8, c++11, debug, no-exceptions
    - env: VER=3.8 STD=11 BUILD=Debug EX=OFF TESTS="mpark;libc++"
      compiler: clang
      os: linux
      dist: precise
      addons: *clang38
    # ubuntu 14.04, clang-3.8, c++11, release, exceptions
    - env: VER=3.8 STD=11 BUILD=Release EX=ON TESTS="mpark;libc++"
      compiler: clang
      os: linux
      dist: precise
      addons: *clang38
    # ubuntu 14.04, clang-3.8, c++11, release, no-exceptions
    - env: VER=3.8 STD=11 BUILD=Release EX=OFF TESTS="mpark;libc++"
      compiler: clang
      os: linux
      dist: precise
      addons: *clang38
    # ubuntu 14.04, clang-3.8, c++14, debug, exceptions
    - env: VER=3.8 STD=14 BUILD=Debug EX=ON TESTS="mpark;libc++"
      compiler: clang
      os: linux
      dist: precise
      addons: *clang38
    # ubuntu 14.04, clang-3.8, c++14, debug, no-exceptions
    - env: VER=3.8 STD=14 BUILD=Debug EX=OFF TESTS="mpark;libc++"
      compiler: clang
      os: linux
      dist: precise
      addons: *clang38
    # ubuntu 14.04, clang-3.8, c++14, release, exceptions
    - env: VER=3.8 STD=14 BUILD=Release EX=ON TESTS="mpark;libc++"
      compiler: clang
      os: linux
      dist: precise
      addons: *clang38
    # ubuntu 14.04, clang-3.8, c++14, release, no-exceptions
    - env: VER=3.8 STD=14 BUILD=Release EX=OFF TESTS="mpark;libc++"
      compiler: clang
      os: linux
      dist: precise
      addons: *clang38

    # ubuntu 14.04, clang-3.9, c++11, debug, exceptions
    - env: VER=3.9 STD=11 BUILD=Debug EX=ON TESTS="mpark;libc++"
      compiler: clang
      os: linux
      dist: trusty
      addons: &clang39 { apt: { packages: ["clang-3.9"], sources: ["ubuntu-toolchain-r-test", "llvm-toolchain-trusty-3.9"] } }
    # ubuntu 14.04, clang-3.9, c++11, debug, no-exceptions
    - env: VER=3.9 STD=11 BUILD=Debug EX=OFF TESTS="mpark;libc++"
      compiler: clang
      os: linux
      dist: trusty
      addons: *clang39
    # ubuntu 14.04, clang-3.9, c++11, release, exceptions
    - env: VER=3.9 STD=11 BUILD=Release EX=ON TESTS="mpark;libc++"
      compiler: clang
      os: linux
      dist: trusty
      addons: *clang39
    # ubuntu 14.04, clang-3.9, c++11, release, no-exceptions
    - env: VER=3.9 STD=11 BUILD=Release EX=OFF TESTS="mpark;libc++"
      compiler: clang
      os: linux
      dist: trusty
      addons: *clang39
    # ubuntu 14.04, clang-3.9, c++14, debug, exceptions
    - env: VER=3.9 STD=14 BUILD=Debug EX=ON TESTS="mpark;libc++"
      compiler: clang
      os: linux
      dist: trusty
      addons: *clang39
    # ubuntu 14.04, clang-3.9, c++14, debug, no-exceptions
    - env: VER=3.9 STD=14 BUILD=Debug EX=OFF TESTS="mpark;libc++"
      compiler: clang
      os: linux
      dist: trusty
      addons: *clang39
    # ubuntu 14.04, clang-3.9, c++14, release, exceptions
    - env: VER=3.9 STD=14 BUILD=Release EX=ON TESTS="mpark;libc++"
      compiler: clang
      os: linux
      dist: trusty
      addons: *clang39
    # ubuntu 14.04, clang-3.9, c++14, release, no-exceptions
    - env: VER=3.9 STD=14 BUILD=Release EX=OFF TESTS="mpark;libc++"
      compiler: clang
      os: linux
      dist: trusty
      addons: *clang39

    # ubuntu 14.04, clang-4.0, c++11, debug, exceptions
    - env: VER=4.0 STD=11 BUILD=Debug EX=ON TESTS="mpark;libc++"
      compiler: clang
      os: linux
      dist: trusty
      addons: &clang40 { apt: { packages: ["clang-4.0"], sources: ["ubuntu-toolchain-r-test", "llvm-toolchain-trusty-4.0"] } }
    # ubuntu 14.04, clang-4.0, c++11, debug, no-exceptions
    - env: VER=4.0 STD=11 BUILD=Debug EX=OFF TESTS="mpark;libc++"
      compiler: clang
      os: linux
      dist: trusty
      addons: *clang40
    # ubuntu 14.04, clang-4.0, c++11, release, exceptions
    - env: VER=4.0 STD=11 BUILD=Release EX=ON TESTS="mpark;libc++"
      compiler: clang
      os: linux
      dist: trusty
      addons: *clang40
    # ubuntu 14.04, clang-4.0, c++11, release, no-exceptions
    - env: VER=4.0 STD=11 BUILD=Release EX=OFF TESTS="mpark;libc++"
      compiler: clang
      os: linux
      dist: trusty
      addons: *clang40
    # ubuntu 14.04, clang-4.0, c++14, debug, exceptions
    - env: VER=4.0 STD=14 BUILD=Debug EX=ON TESTS="mpark;libc++"
      compiler: clang
      os: linux
      dist: trusty
      addons: *clang40
    # ubuntu 14.04, clang-4.0, c++14, debug, no-exceptions
    - env: VER=4.0 STD=14 BUILD=Debug EX=OFF TESTS="mpark;libc++"
      compiler: clang
      os: linux
      dist: trusty
      addons: *clang40
    # ubuntu 14.04, clang-4.0, c++14, release, exceptions
    - env: VER=4.0 STD=14 BUILD=Release EX=ON TESTS="mpark;libc++"
      compiler: clang
      os: linux
      dist: trusty
      addons: *clang40
    # ubuntu 14.04, clang-4.0, c++14, release, no-exceptions
    - env: VER=4.0 STD=14 BUILD=Release EX=OFF TESTS="mpark;libc++"
      compiler: clang
      os: linux
      dist: trusty
      addons: *clang40

    # OS X Yosemite 10.10, Apple Clang, c++11, debug, exceptions
    - env: STD=11 BUILD=Debug EX=ON TESTS="mpark;libc++"
      compiler: clang
      os: osx
      osx_image: xcode6.4
    # OS X Yosemite 10.10, Apple Clang, c++11, debug, no-exceptions
    - env: STD=11 BUILD=Debug EX=OFF TESTS="mpark;libc++"
      compiler: clang
      os: osx
      osx_image: xcode6.4
    # OS X Yosemite 10.10, Apple Clang, c++11, release, exceptions
    - env: STD=11 BUILD=Release EX=ON TESTS="mpark;libc++"
      compiler: clang
      os: osx
      osx_image: xcode6.4
    # OS X Yosemite 10.10, Apple Clang, c++11, release, no-exceptions
    - env: STD=11 BUILD=Release EX=OFF TESTS="mpark;libc++"
      compiler: clang
      os: osx
      osx_image: xcode6.4
    # OS X Yosemite 10.10, Apple Clang, c++14, debug, exceptions
    - env: STD=14 BUILD=Debug EX=ON TESTS="mpark;libc++"
      compiler: clang
      os: osx
      osx_image: xcode6.4
    # OS X Yosemite 10.10, Apple Clang, c++14, debug, no-exceptions
    - env: STD=14 BUILD=Debug EX=OFF TESTS="mpark;libc++"
      compiler: clang
      os: osx
      osx_image: xcode6.4
    # OS X Yosemite 10.10, Apple Clang, c++14, release, exceptions
    - env: STD=14 BUILD=Release EX=ON TESTS="mpark;libc++"
      compiler: clang
      os: osx
      osx_image: xcode6.4
    # OS X Yosemite 10.10, Apple Clang, c++14, release, no-exceptions
    - env: STD=14 BUILD=Release EX=OFF TESTS="mpark;libc++"
      compiler: clang
      os: osx
      osx_image: xcode6.4

    # OS X El Capitan 10.11, apple-clang-8, c++11, debug, exceptions
    - env: STD=11 BUILD=Debug EX=ON TESTS="mpark;libc++"
      compiler: clang
      os: osx
      osx_image: xcode7.3
    # OS X El Capitan 10.11, apple-clang-8, c++11, debug, no-exceptions
    - env: STD=11 BUILD=Debug EX=OFF TESTS="mpark;libc++"
      compiler: clang
      os: osx
      osx_image: xcode7.3
    # OS X El Capitan 10.11, apple-clang-8, c++11, release, exceptions
    - env: STD=11 BUILD=Release EX=ON TESTS="mpark;libc++"
      compiler: clang
      os: osx
      osx_image: xcode7.3
    # OS X El Capitan 10.11, apple-clang-8, c++11, release, no-exceptions
    - env: STD=11 BUILD=Release EX=OFF TESTS="mpark;libc++"
      compiler: clang
      os: osx
      osx_image: xcode7.3
    # OS X El Capitan 10.11, apple-clang-8, c++14, debug, exceptions
    - env: STD=14 BUILD=Debug EX=ON TESTS="mpark;libc++"
      compiler: clang
      os: osx
      osx_image: xcode7.3
    # OS X El Capitan 10.11, apple-clang-8, c++14, debug, no-exceptions
    - env: STD=14 BUILD=Debug EX=OFF TESTS="mpark;libc++"
      compiler: clang
      os: osx
      osx_image: xcode7.3
    # OS X El Capitan 10.11, apple-clang-8, c++14, release, exceptions
    - env: STD=14 BUILD=Release EX=ON TESTS="mpark;libc++"
      compiler: clang
      os: osx
      osx_image: xcode7.3
    # OS X El Capitan 10.11, apple-clang-8, c++14, release, no-exceptions
    - env: STD=14 BUILD=Release EX=OFF TESTS="mpark;libc++"
      compiler: clang
      os: osx
      osx_image: xcode7.3

    # OS X Sierra 10.12, apple-clang-8, c++11, debug, exceptions
    - env: STD=11 BUILD=Debug EX=ON TESTS="mpark;libc++"
      compiler: clang
      os: osx
      osx_image: xcode8.3
    # OS X Sierra 10.12, apple-clang-8, c++11, debug, no-exceptions
    - env: STD=11 BUILD=Debug EX=OFF TESTS="mpark;libc++"
      compiler: clang
      os: osx
      osx_image: xcode8.3
    # OS X Sierra 10.12, apple-clang-8, c++11, release, exceptions
    - env: STD=11 BUILD=Release EX=ON TESTS="mpark;libc++"
      compiler: clang
      os: osx
      osx_image: xcode8.3
    # OS X Sierra 10.12, apple-clang-8, c++11, release, no-exceptions
    - env: STD=11 BUILD=Release EX=OFF TESTS="mpark;libc++"
      compiler: clang
      os: osx
      osx_image: xcode8.3
    # OS X Sierra 10.12, apple-clang-8, c++14, debug, exceptions
    - env: STD=14 BUILD=Debug EX=ON TESTS="mpark;libc++"
      compiler: clang
      os: osx
      osx_image: xcode8.3
    # OS X Sierra 10.12, apple-clang-8, c++14, debug, no-exceptions
    - env: STD=14 BUILD=Debug EX=OFF TESTS="mpark;libc++"
      compiler: clang
      os: osx
      osx_image: xcode8.3
    # OS X Sierra 10.12, apple-clang-8, c++14, release, exceptions
    - env: STD=14 BUILD=Release EX=ON TESTS="mpark;libc++"
      compiler: clang
      os: osx
      osx_image: xcode8.3
    # OS X Sierra 10.12, apple-clang-8, c++14, release, no-exceptions
    - env: STD=14 BUILD=Release EX=OFF TESTS="mpark;libc++"
      compiler: clang
      os: osx
      osx_image: xcode8.3

before_install:
  # Save the name of the compiler.
  - COMPILER=${CC}
  # Set the correct `CC` and `CXX` environment variables.
  - |
    if [ -n "${VER}" ]; then
      export CC="${CC}-${VER}"
      export CXX="${CXX}-${VER}"
    fi
  - ${CXX} --version
  # Directory for dependency installation.
  - DEPS="${TRAVIS_BUILD_DIR}/deps"
  - mkdir -p ${DEPS}
  # Install newer cmake.
  - |
    if [ "${TRAVIS_OS_NAME}" = "osx" ]; then
      brew update
      brew uninstall cmake
      brew install cmake
    elif [ "${TRAVIS_OS_NAME}" = "linux" ]; then
      travis_retry wget --no-check-certificate https://cmake.org/files/v3.7/cmake-3.7.2-Linux-x86_64.sh
      bash cmake-3.7.2-Linux-x86_64.sh --skip-license --prefix="${DEPS}"
      export PATH="${DEPS}/bin:${PATH}"
    fi
  # Install specific version of libc++.
  - |
    if [ "${TRAVIS_OS_NAME}" = "linux" ] && [ "${COMPILER}" = "clang" ] && [ -n "${VER}" ]; then
      LLVM_VER=$(echo "$(${CXX} --version)" | grep -Po "clang version \K([0-9]\.[0-9]\.[0-9])")

      LLVM_URL="http://llvm.org/releases/${LLVM_VER}/llvm-${LLVM_VER}.src.tar.xz"
      LIBCXX_URL="http://llvm.org/releases/${LLVM_VER}/libcxx-${LLVM_VER}.src.tar.xz"
      LIBCXXABI_URL="http://llvm.org/releases/${LLVM_VER}/libcxxabi-${LLVM_VER}.src.tar.xz"

      mkdir -p llvm-build llvm llvm/projects/libcxx llvm/projects/libcxxabi

      travis_retry wget -O - ${LLVM_URL} | tar --strip-components=1 -xJ -C llvm
      travis_retry wget -O - ${LIBCXX_URL} | tar --strip-components=1 -xJ -C llvm/projects/libcxx
      travis_retry wget -O - ${LIBCXXABI_URL} | tar --strip-components=1 -xJ -C llvm/projects/libcxxabi

      pushd llvm-build
      cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=${DEPS} ../llvm
      cmake --build projects/libcxx --target install -- -j 2
      cmake --build projects/libcxxabi --target install -- -j 2
      popd
      if [ "${VER}" = "3.5" ]; then
        # `cxxabi.h` isn't installed correctly for libc++-3.5.
        cp llvm/projects/libcxxabi/include/cxxabi.h ${DEPS}/include/c++/v1
      fi

      # These flags are passed via `-DCMAKE_CXX_FLAGS` because setting them on
      # `CXXFLAGS` conflicts with the include directories explicitly set by
      # libc++ when it's being built for the `std::variant` tests.
      COMPILE_FLAGS="-nostdinc++ -isystem ${DEPS}/include/c++/v1"

      export LDFLAGS="${LDFLAGS} -L${DEPS}/lib -lc++ -lc++abi"
      export LD_LIBRARY_PATH="${DEPS}/lib:${LD_LIBRARY_PATH}"
    fi

install:
  - mkdir build
  - pushd build
  - cmake -DCMAKE_CXX_FLAGS="${COMPILE_FLAGS}"
          -DCMAKE_BUILD_TYPE="${BUILD}"
          -DMPARK_VARIANT_CXX_STANDARD="${STD}"
          -DMPARK_VARIANT_EXCEPTIONS="${EX}"
          -DMPARK_VARIANT_INCLUDE_TESTS="${TESTS}" ..
  - cmake --build . -- -j 2
  - popd

script:
  - pushd build
  - ctest -V
  - popd

notifications:
  email: false
